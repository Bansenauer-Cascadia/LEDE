@using LEDE.Domain.Entities
@model RatingViewModel
@{
    ViewBag.Title = "Rate a Task";
}
@section script {
    <script src="~/Scripts/UploadPopup.js"></script>
}
    <div class="jumbotron">
        <div class="row">
            <div class="col-md-6">
                <h2>@Model.TaskVersion.User.LastName, @Model.TaskVersion.User.FirstName<br />@Model.TaskVersion.Task.TaskName</h2>
            </div>
            <div class="col-md-2">
                @using (Html.BeginForm("Header", "Rating", FormMethod.Post))
                {
                    @:Version @Html.DropDownListFor(x => x.VersID, Model.VersionDrop, 
                    new { style = "width:75px", onchange = "this.form.submit();", @class = "form-control" })
    }
            </div>
            <div class="col-md-2">
                @Html.ActionLink("Download Document", "Download", new { DocumentID = Model.TaskVersion.DocumentID }, 
                new {@class="btn btn-default" })
            </div>
            <div class="col-md-2">
                @Html.ActionLink("Upload Feedback", "Upload", new {VersID = Model.TaskVersion.VersID, SelectedUserID = 
           Model.TaskVersion.UserID, User = Model.TaskVersion.User.FirstName + " " + Model.TaskVersion.User.LastName,
           TaskName = Model.TaskVersion.Task.TaskName, Version = Model.TaskVersion.Version, returnUrl = Request.Url.PathAndQuery}, 
           new {@class="btn btn-default upload" })
            </div>
        </div>
    </div>


    @Html.ValidationSummary()

    @using (Html.BeginForm("Reflection", "Rating", new {VersID = Model.VersID }, FormMethod.Post))
    {
        @Html.ValidationSummary()

        if (Model.TaskVersion.Task.TaskTypeID == 2)
        {
            <table class="table table-hover">
                <tr>
                    <th>Number of Entries</th>
                    <th></th>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(model => model.TaskVersion.ReadingLogEntry.NumEntries, new { @class = "form-control" })</td>
                    <td><input type="submit" name="submitCommand" value="Save" class="btn btn-default" /></td>
                </tr>
            </table>
        }
        else if (Model.TaskVersion.Task.TaskTypeID == 3)
        {
            <table class="table table-striped">
                <tr>
                    <th>Number of Entries</th>
                    <th></th>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(model => model.TaskVersion.InternReflection.NumHrs, new { @class = "form-control" })</td>
                    <td><input type="submit" name="submitCommand" value="Save" class="btn btn-default" /></td>
                </tr>
            </table>
        }
    }
    @using (Html.BeginForm("Task", "Rating", FormMethod.Post))
    {
        @Html.ValidationSummary()
        @Html.HiddenFor(x => x.VersID)
        <h3>Seminar Core Topic Ratings &nbsp;&nbsp;<input type="submit" name="SubmitCommand" value="Save" class="btn btn-default" /></h3>
        <table class="table table-striped" title="Task Core Ratings">
            <tr>
                <th>
                    Core Topic
                </th>
                <th>
                    Conceptual
                </th>
                <th>
                    Strategic
                </th>
                <th>
                    Personal
                </th>
                <th></th>
            </tr>
            @Html.EditorFor(model => model.Rating.TaskCoreRatings)
        </table>
    }

    @using (Html.BeginForm("Other", "Rating", new { panel = postingPanel.Other }, FormMethod.Post))
    {
        @Html.ValidationSummary()
        @Html.HiddenFor(x => x.VersID)
        <h3>
            Other Core Topic Ratings&nbsp;&nbsp;
            @if (Model.OtherVisible == false)
            {
                <input type="submit" name="SubmitCommand" value="Add" class="btn btn-default" />
                if (Model.Rating.OtherCoreRatings.FirstOrDefault() != null)
                {
                    <input type="submit" name="SubmitCommand" value="Save" class="btn btn-default" />
                }
            }
        </h3>

        <table class="table table-striped">

            @if ((Model.Rating.OtherCoreRatings != null && Model.Rating.OtherCoreRatings.Count > 0) || Model.OtherVisible == true)
            {
                <tr>
                    <th>
                        Core Topic
                    </th>
                    <th>
                        Conceptual
                    </th>
                    <th>
                        Strategic
                    </th>
                    <th>
                        Personal
                    </th>
                    <th></th>

                </tr>
            }
            @if (Model.OtherVisible == true)
            {
                int index = Model.Rating.OtherCoreRatings.Count;
                <tr>
                    <td>
                        @Html.DropDownList("Rating.OtherCoreRatings[" + index + "].CoreTopicID", Model.CoreDrop, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBox("Rating.OtherCoreRatings[" + index + "].Cscore", null, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBox("Rating.OtherCoreRatings[" + index + "].Sscore", null, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBox("Rating.OtherCoreRatings[" + index + "].Pscore", null, new { @class = "form-control" })
                    </td>
                    <td>
                        <input type="submit" name="SubmitCommand" value="Cancel" class="btn btn-default" />
                        <input type="submit" name="SubmitCommand" value="Save" class="btn btn-default" />
                    </td>
                </tr>

            }
            @Html.EditorFor(model => model.Rating.OtherCoreRatings)
        </table>
    }

    @using (Html.BeginForm("Impact", "Rating", new { panel = postingPanel.Impact, VersID = Model.VersID }, FormMethod.Post))
    {
        @Html.ValidationSummary()
        <h3>
            Impact Ratings &nbsp;&nbsp;
            @if (Model.ImpactVisible == false)
            {
                if (Model.Rating.ImpactRating == null)
                {
                    <input type="submit" name="submitCommand" value="Add" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" name="submitCommand" value="Save" class="btn btn-default" />
                }
            }
        </h3>
        <table class="table table-striped">

            @if (Model.Rating.ImpactRating != null || Model.ImpactVisible == true)
            {
                <tr>
                    <th>Structures & Operations</th>
                    <th>Professional Practices</th>
                    <th>Student Learning</th>
                    <th></th>
                </tr>

                <tr>
                    <td>@Html.TextBoxFor(model => model.Rating.ImpactRating.Sscore, new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(model => model.Rating.ImpactRating.Pscore, new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(model => model.Rating.ImpactRating.Lscore, new { @class = "form-control" })</td>
                    <td>
                        @if (Model.ImpactVisible == true)
                        {
                            <input type="submit" name="submitCommand" class="btn btn-default" value="Save" />
                            <input type="submit" name="submitCommand" class="btn btn-default" value="Cancel" />
                        }
                        else
                        {
                            @Html.ActionLink("Clear", "Clear", new { VersID = Model.VersID, RatingID = Model.Rating.ImpactRating.RatingID }, new { @class = "btn btn-default btn-xs" })

                        }
                    </td>
                </tr>

            }
        </table>

    }
